version: '3'
services:
  nextjs:
    container_name: nextjs
    depends_on:
      redis:
        condition: service_started
    build: ./
    environment:
      RADDR: redis
    ports:
      - 3000:3000
    networks:
      - redis
    links:
      - redis
    command: "/bin/sh -c 'yarn build && pm2-runtime yarn -- start'"
  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 80:80
      - '443:443'
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    networks:
      - redis
    depends_on:
      - nextjs
    links:
      - nextjs
  redis:
    container_name: redis
    image: redis
    restart: always
    command: 'redis-server --port 6379 --requirepass ::REMRichE1007'
    networks:
      - redis
  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  redis:
    driver: bridge
